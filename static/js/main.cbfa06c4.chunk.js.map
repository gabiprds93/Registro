{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/index.js","redux/actions/userActions.js","redux/store.js","Components/Input.js","Components/Phone.js","Components/InputFile.js","Components/InputType.js","Components/ForminkInput.js","config/ConfigForm.js","config/validation.js","config/initialValues.js","Pages/Registry.js","redux/actions/fileActions.js","Pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isFetching","registryResponse","undefined","errors","rootReducer","combineReducers","form","reducer","user","state","action","type","Object","assign","response","loginResponse","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Input","label","field","className","Phone","onChange","evento","target","name","value","RegExp","test","setFieldValue","InputFile","id","fileName","document","getElementById","files","innerHTML","onClick","handleSubmit","InputType","props","options","FormikInput","sizes","styles","style","marginBottom","msg","entrepreneurDataConfig","accessDataConfig","loginDataConfig","validateRegistry","values","nombre","descripcion","correo","celular","username","clave","validateLogin","initialValuesRegistry","idusuario","dni","nombree","url","mov_usu","wichButton","initialValuesLogin","mapDispatchToProps","fetchUserRegistry","payload","dispatch","fetch","method","body","then","json","result","userRegistrySuccess","catch","error","userRegistryFailure","message","fetchFileUpload","fileUploadSuccess","fileUploadFailure","connect","history","initialValues","onSubmit","formData","FormData","fileField","querySelector","append","data","console","log","formElement","delete","push","validate","resetForm","map","item","index","key","component","fetchUserLogin","userLoginSuccess","userLoginFailure","actions","setErrors","general","COD_MENSAJE","submitForm","App","store","exact","path","Registry","Login","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbfa06c4.chunk.js","sourcesContent":["import { \r\n  USER_REGISTRY_REQUEST,\r\n  USER_REGISTRY_SUCCESS,\r\n  USER_REGISTRY_FAILURE,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE, \r\n} from \"../actions/userActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  registryResponse: undefined,\r\n  errors: undefined,\r\n}\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action,\r\n){\r\n  switch (action.type) {\r\n    case USER_REGISTRY_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        registryResponse: ''\r\n      })\r\n\r\n    case USER_REGISTRY_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        registryResponse: action.response,\r\n      })\r\n\r\n    case USER_REGISTRY_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errors: action.errors,\r\n      })\r\n      \r\n    case USER_LOGIN_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        loginResponse: ''\r\n      })\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        loginResponse: action.response,\r\n      })\r\n\r\n    case USER_LOGIN_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errors: action.errors,\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer } from 'redux-form'\r\n\r\nimport userReducer from './userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  form: reducer,\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer","export const USER_REGISTRY_REQUEST = 'USER_REGISTRY_REQUEST'\r\nexport const USER_REGISTRY_FAILURE = 'USER_REGISTRY_FAILURE'\r\nexport const USER_REGISTRY_SUCCESS = 'USER_REGISTRY_SUCCESS'\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\n\r\nexport const userRegistryRequest = () => ({\r\n  type: USER_REGISTRY_REQUEST\r\n})\r\n\r\nexport const userRegistrySuccess = payload => ({\r\n  type: USER_REGISTRY_SUCCESS,\r\n  response: {...payload}\r\n})\r\n\r\nexport const userRegistryFailure = payload => ({\r\n  type: USER_REGISTRY_FAILURE,\r\n  errors: {...payload}\r\n})\r\n\r\nexport const fetchUserRegistry = payload => {\r\n  return dispatch =>{\r\n    dispatch(userRegistryRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/adm_emprendedor1.php', {\r\n      method: \"POST\",\r\n      body: payload,\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(userRegistrySuccess(result)))\r\n    .catch(error => {\r\n      dispatch(userRegistryFailure(error.message))\r\n    })\r\n  }\r\n}\r\n\r\nexport const userLoginRequest = () => ({\r\n  type: USER_LOGIN_REQUEST\r\n})\r\n\r\nexport const userLoginSuccess = payload => ({\r\n  type: USER_LOGIN_SUCCESS,\r\n  response: {...payload}\r\n})\r\n\r\nexport const userLoginFailure = payload => ({\r\n  type: USER_LOGIN_FAILURE,\r\n  ...payload\r\n})\r\n\r\nexport const fetchUserLogin = payload => {\r\n  return dispatch =>{\r\n    dispatch(userLoginRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/adm_login_usuario1.php', {\r\n      method: \"POST\",\r\n      body: payload,\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(userLoginSuccess(result)))\r\n    .catch(error => {\r\n      dispatch(userLoginFailure(error.message))\r\n    })\r\n  }\r\n}","import { createStore, applyMiddleware, compose  } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react'\r\n\r\nconst Input = ({label, type, field}) => {\r\n  return(\r\n    <label className=\"form-label\">\r\n      {label}\r\n      {type === 'textarea' ? \r\n        <textarea className=\"form-input\" {...field}></textarea>\r\n        : <input className=\"form-input\" type={type} {...field} />\r\n      }\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst Phone = ({label, form, field}) => {\r\n  const handleChangeInput = (evento) => {\r\n    const { name, value } = evento.target;\r\n    let regex = new RegExp(\"^[0-9]{0,9}$\");\r\n\r\n    if (regex.test(value)) {\r\n      form.setFieldValue(name, value)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <label className=\"form-label\">\r\n      {label}\r\n      <input className=\"form-input\" type='text' {...field} onChange={handleChangeInput}  />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Phone","import React from 'react'\r\n\r\nconst InputFile = ({label, type, field, form}) => {\r\n  const handleChange = () => {\r\n    let fileName = document.getElementById('input-file').files[0].name;\r\n    document.getElementById('info').innerHTML = fileName;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    form.setFieldValue('wichButton', 'uploadButton')\r\n    form.handleSubmit()\r\n  }\r\n  \r\n  return(\r\n    <div className=\"form-label\">\r\n      {label}\r\n      <div className=\"file-upload\">\r\n        <label className=\"form-input\">\r\n          <span id='info'>Seleccionar archivo</span>\r\n          <input id='input-file' type={type} {...field} onChange={handleChange} />\r\n        </label>\r\n        <button className=\"background-green\" type=\"button\" onClick={handleClick} >Cargar</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputFile","import React from 'react'\r\n\r\nimport Input from './Input'\r\nimport Phone from './Phone'\r\nimport InputFile from './InputFile'\r\n\r\nconst InputType = ({\r\n  type,\r\n  options = [],\r\n  ...props\r\n}) => {\r\n  switch (type) {\r\n    case 'phone':\r\n      return <Phone {...props} />\r\n    case 'file':\r\n      return <InputFile type={type} {...props} />\r\n    default:\r\n      return <Input type={type} {...props} />\r\n  }\r\n}\r\n\r\nexport default InputType","import React from 'react'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nimport InputType from './InputType'\r\n\r\nexport const FormikInput = ({ sizes, styles, ...props }) => {\r\n  return (\r\n    <div style={{marginBottom: '30px'}}>\r\n      <InputType {...props} />\r\n      <ErrorMessage name={props.field.name}>\r\n        {(msg) => (\r\n          <span className=\"message\">{msg}</span>\r\n        )}\r\n      </ErrorMessage>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormikInput\r\n","export const entrepreneurDataConfig = [\r\n  { label: 'Nombre de la tienda o persona', type: 'text', name: 'nombre' },\r\n  { label: 'Descripción de la tienda o persona', type: 'textarea', name: 'descripcion' },\r\n  { label: 'Nombre de contacto', type: 'text', name: 'nombree' },\r\n  { label: 'DNI', type: 'text', name: 'dni' },\r\n  { label: 'Correo', type: 'email', name: 'correo' },\r\n  { label: 'Celular de contacto', type: 'phone', name: 'celular' },\r\n  { label: 'URL Facebook', type: 'text', name: 'url' },\r\n]\r\n\r\nexport const accessDataConfig = [\r\n  { label: 'Usuario', type: 'text', name: 'username' },\r\n  { label: 'Contraseña', type: 'password', name: 'clave' },\r\n  { label: 'Confirmar contraseña', type: 'password', name: 'confirmPassword' },\r\n  { label: 'Agregar archivos', type: 'file', name: 'addFiles' },\r\n]\r\n\r\nexport const loginDataConfig = [\r\n  { label: 'Usuario', type: 'text', name: 'username' },\r\n  { label: 'Contraseña', type: 'password', name: 'clave' },\r\n]","export const validateRegistry = values => {\r\n  const errors = {}\r\n\r\n  if (!values.nombre) {\r\n    errors.nombre = 'Requerido';\r\n  }\r\n\r\n  if (!values.descripcion) {\r\n    errors.descripcion = 'Requerido';\r\n  }\r\n\r\n  if (!values.correo) {\r\n    errors.correo = 'Requerido';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.correo)) {\r\n    errors.correo = 'Correo inválido'\r\n  }\r\n\r\n  if (!values.celular) {\r\n    errors.celular = 'Requerido';\r\n  }\r\n\r\n  if (!values.username) {\r\n    errors.username = 'Requerido';\r\n  }\r\n\r\n  if (!values.clave) {\r\n    errors.clave = 'Requerido';\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport const validateLogin = values => {\r\n  const errors = {}\r\n\r\n  if (!values.username) {\r\n    errors.username = 'Requerido';\r\n  }\r\n\r\n  if (!values.clave) {\r\n    errors.clave = 'Requerido';\r\n  }\r\n\r\n  return errors\r\n}","export const initialValuesRegistry = {\r\n  idusuario: '',\r\n  dni: '',\r\n  nombre: '',\r\n  descripcion: '',\r\n  nombree: '',\r\n  celular: '',\r\n  correo: '',\r\n  url: '',\r\n  username: '',\r\n  clave: '',\r\n  mov_usu: 'N',\r\n  wichButton: '',\r\n}\r\n\r\nexport const initialValuesLogin = {\r\n  username: '',\r\n  clave: ''\r\n}","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormikInput from '../Components/ForminkInput'\r\nimport { entrepreneurDataConfig, accessDataConfig } from '../config/ConfigForm'\r\nimport { fetchUserRegistry } from '../redux/actions/userActions'\r\nimport { fetchFileUpload } from '../redux/actions/fileActions'\r\nimport { validateRegistry } from '../config/validation'\r\nimport { initialValuesRegistry } from '../config/initialValues'\r\n\r\nconst Registry = ({fetchUserRegistry, fetchFileUpload, history}) => {\r\n  const submitForm = values => {\r\n    if(values.wichButton === 'uploadButton'){\r\n      let formData = new FormData();\r\n      let fileField = document.querySelector(\"input[type='file']\");\r\n  \r\n      formData.append('file', fileField.files[0]);\r\n      fetchFileUpload(formData).then(data => {\r\n          console.log('success')\r\n      })\r\n    }\r\n    else{\r\n      let formElement = document.getElementById(\"formElement\")\r\n      let formData = new FormData(formElement)\r\n\r\n      formData.append('idusuario', '')\r\n      formData.append('mov_usu', 'N')\r\n      formData.delete('confirmPassword')\r\n      formData.delete('addFiles')\r\n      fetchUserRegistry(formData).then(() => {\r\n        history.push('/login')\r\n      })  \r\n    }\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">Registro</h2>\r\n        <h3 className=\"subtitle\">Ingresa los datos solicitados para formar parte de nuestros distribuidores.</h3>\r\n      </div>\r\n\r\n      <Formik initialValues={initialValuesRegistry} onSubmit={submitForm} validate={validateRegistry}>\r\n      {({resetForm, handleSubmit, setFieldValue}) => (\r\n        <Form className=\"form\" id=\"formElement\">\r\n          <h3 className=\"section-text\">Datos del Emprendedor</h3>\r\n          {entrepreneurDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          <h3 className=\"section-text\">Datos de acceso</h3>\r\n          {accessDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          <span className=\"form-label\">\r\n            <Field\r\n              type='checkbox'\r\n              name='termns'\r\n            />\r\n            Autorizo y Acepto que la Municipalidad de La Molina me notifique los actos administrativos que pudiera emitir a consecuencia de la presente solicitud y/0 procedimiento administrativo al correo electrónico.\r\n          </span>\r\n          \r\n          <div className=\"button-group\">\r\n            <button className=\"background-red\" type=\"button\" onClick={() => resetForm(initialValuesRegistry)}>Cancelar</button>\r\n            <button className=\"background-green\" type=\"button\" onClick={() => {setFieldValue('wichButton', 'sendButton')\r\n              handleSubmit()}}>Enviar</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nconst mapDispatchToProps = { fetchUserRegistry, fetchFileUpload }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registry)","export const FILE_UPLOAD_REQUEST = 'FILE_UPLOAD_REQUEST'\r\nexport const FILE_UPLOAD_FAILURE = 'FILE_UPLOAD_FAILURE'\r\nexport const FILE_UPLOAD_SUCCESS = 'FILE_UPLOAD_SUCCESS'\r\n\r\nexport const fileUploadRequest = () => ({\r\n  type: FILE_UPLOAD_REQUEST\r\n})\r\n\r\nexport const fileUploadSuccess = payload => ({\r\n  type: FILE_UPLOAD_SUCCESS,\r\n  ...payload\r\n})\r\n\r\nexport const fileUploadFailure = payload => ({\r\n  type: FILE_UPLOAD_FAILURE,\r\n  ...payload\r\n})\r\n\r\nexport const fetchFileUpload = payload => {\r\n  return dispatch =>{\r\n    dispatch(fileUploadRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/subirarchivos.php', {\r\n      method: 'PUT',\r\n      body: payload\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(fileUploadSuccess(result)))\r\n    .catch(error => {\r\n      dispatch(fileUploadFailure(error.message))\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormikInput from '../Components/ForminkInput'\r\nimport { loginDataConfig } from '../config/ConfigForm'\r\nimport { fetchUserLogin } from '../redux/actions/userActions'\r\nimport { validateLogin } from '../config/validation'\r\nimport { initialValuesLogin } from '../config/initialValues'\r\n\r\nconst Login = ({ fetchUserLogin }) => {\r\n  const submitForm = (values, actions) => {\r\n    let formElement = document.getElementById(\"formLogin\")\r\n    let formData = new FormData(formElement)\r\n      \r\n    fetchUserLogin(formData).then((data)=>{\r\n      if(data.response && data.response['0']){\r\n        actions.setErrors({\r\n          general: data.response[0].COD_MENSAJE,\r\n        })\r\n      }\r\n    })\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">Mi cuenta</h2>\r\n        <h3 className=\"subtitle\">Ingresa con tu cuenta para hacer uso de la Plataforma Digital MoliEmprendedor.</h3>\r\n      </div>\r\n\r\n      <Formik \r\n        initialValues={initialValuesLogin} \r\n        onSubmit={(values, actions) => {\r\n          submitForm(values, actions)\r\n        }}\r\n        validate={validateLogin}\r\n      >\r\n      {({ errors }) => (\r\n        <Form className=\"form\" id=\"formLogin\">\r\n          {loginDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          {errors.general && (\r\n            <p className=\"message\">{errors.general}</p>\r\n          )}\r\n\r\n          <div className=\"button-group\">\r\n            <button className=\"background-green\" type=\"submit\">Ingresar</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => state \r\n\r\nconst mapDispatchToProps = {fetchUserLogin }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './assets/styles.css'\nimport store from './redux/store'\nimport Registry from './Pages/Registry'\nimport Login from './Pages/Login'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Registry} />\n          <Route path=\"/login\" component={Login} />\n        </Switch>\n      </HashRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}