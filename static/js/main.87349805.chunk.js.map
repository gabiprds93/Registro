{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/index.js","redux/actions/userActions.js","redux/store.js","Components/Input.js","Components/InputNumber.js","Components/InputFile.js","Components/InputDate.js","Components/InputType.js","Components/ForminkInput.js","config/ConfigForm.js","config/validation.js","config/initialValues.js","Pages/Registry.js","redux/actions/fileActions.js","Pages/Login.js","config/tableConfig.js","Components/DataTable.js","Pages/Account.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isFetching","registryResponse","undefined","errors","rootReducer","combineReducers","form","reducer","user","state","action","type","Object","assign","response","loginResponse","listUsers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","Input","label","field","className","InputNumber","regularExp","onChange","evento","target","name","value","RegExp","test","setFieldValue","InputFile","React","useState","files","setFiles","map","item","index","key","id","event","inputFile","arrayFiles","i","length","push","multiple","InputDate","useEffect","Date","InputType","props","options","FormikInput","sizes","styles","style","marginBottom","msg","entrepreneurDataConfig","accessDataConfig","loginDataConfig","validateRegistry","values","nombre","descripcion","correo","celular","username","clave","confirmPassword","termns","validateLogin","initialValuesRegistry","idusuario","dni","nombree","fechanac","url","mov_usu","wichButton","initialValuesLogin","mapDispatchToProps","fetchUserRegistry","payload","dispatch","fetch","method","body","then","json","result","userRegistrySuccess","catch","error","userRegistryFailure","message","fetchFileUpload","fileUploadSuccess","fileUploadFailure","connect","history","initialValues","onSubmit","formElement","document","getElementById","formData","FormData","formDataFile","fileField","querySelector","append","delete","validate","resetForm","isValid","dirty","component","onClick","disabled","fetchUserLogin","userLoginSuccess","userLoginFailure","actions","data","COD_MENSAJE","setErrors","general","submitForm","isSubmitting","columns","Header","accessor","DataTable","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","fetchGetUsers","getUsersSuccess","getUsersFailure","NOMBRE","App","store","exact","path","Registry","Login","Account","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.87349805.chunk.js","sourcesContent":["import { \r\n  USER_REGISTRY_REQUEST,\r\n  USER_REGISTRY_SUCCESS,\r\n  USER_REGISTRY_FAILURE,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  GET_USERS_REQUEST,\r\n  GET_USERS_SUCCESS,\r\n  GET_USERS_FAILURE, \r\n} from \"../actions/userActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  registryResponse: undefined,\r\n  errors: undefined,\r\n}\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action,\r\n){\r\n  switch (action.type) {\r\n    case USER_REGISTRY_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        registryResponse: ''\r\n      })\r\n\r\n    case USER_REGISTRY_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        registryResponse: action.response,\r\n      })\r\n\r\n    case USER_REGISTRY_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errors: action.errors,\r\n      })\r\n      \r\n    case USER_LOGIN_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        loginResponse: ''\r\n      })\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        loginResponse: action.response,\r\n      })\r\n\r\n    case USER_LOGIN_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errors: action.errors,\r\n      })\r\n\r\n    case GET_USERS_REQUEST:\r\n      return Object.assign({}, state, {\r\n        isFetching: true,\r\n        listUsers: ''\r\n      })\r\n  \r\n    case GET_USERS_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        listUsers: action.response,\r\n      })\r\n\r\n    case GET_USERS_FAILURE:\r\n      return Object.assign({}, state, {\r\n        isFetching: false,\r\n        errors: action.errors,\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer } from 'redux-form'\r\n\r\nimport userReducer from './userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  form: reducer,\r\n  user: userReducer\r\n})\r\n\r\nexport default rootReducer","export const USER_REGISTRY_REQUEST = 'USER_REGISTRY_REQUEST'\r\nexport const USER_REGISTRY_FAILURE = 'USER_REGISTRY_FAILURE'\r\nexport const USER_REGISTRY_SUCCESS = 'USER_REGISTRY_SUCCESS'\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\n\r\nexport const GET_USERS_REQUEST = 'GET_USERS_REQUEST'\r\nexport const GET_USERS_FAILURE = 'GET_USERS_FAILURE'\r\nexport const GET_USERS_SUCCESS = 'GET_USERS_SUCCESS'\r\n\r\nexport const userRegistryRequest = () => ({\r\n  type: USER_REGISTRY_REQUEST\r\n})\r\n\r\nexport const userRegistrySuccess = payload => ({\r\n  type: USER_REGISTRY_SUCCESS,\r\n  response: {...payload}\r\n})\r\n\r\nexport const userRegistryFailure = payload => ({\r\n  type: USER_REGISTRY_FAILURE,\r\n  errors: {...payload}\r\n})\r\n\r\nexport const fetchUserRegistry = payload => {\r\n  return dispatch =>{\r\n    dispatch(userRegistryRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/adm_emprendedor1.php', {\r\n      method: \"POST\",\r\n      body: payload,\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(userRegistrySuccess(result)))\r\n    .catch(error => {\r\n      dispatch(userRegistryFailure(error.message))\r\n    })\r\n  }\r\n}\r\n\r\nexport const userLoginRequest = () => ({\r\n  type: USER_LOGIN_REQUEST\r\n})\r\n\r\nexport const userLoginSuccess = payload => ({\r\n  type: USER_LOGIN_SUCCESS,\r\n  response: {...payload}\r\n})\r\n\r\nexport const userLoginFailure = payload => ({\r\n  type: USER_LOGIN_FAILURE,\r\n  ...payload\r\n})\r\n\r\nexport const fetchUserLogin = payload => {\r\n  return dispatch =>{\r\n    dispatch(userLoginRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/adm_login_usuario1.php', {\r\n      method: \"POST\",\r\n      body: payload,\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(userLoginSuccess(result)))\r\n    .catch(error => {\r\n      dispatch(userLoginFailure(error.message))\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUsersRequest = () => ({\r\n  type: GET_USERS_REQUEST\r\n})\r\n\r\nexport const getUsersSuccess = payload => ({\r\n  type: GET_USERS_SUCCESS,\r\n  response: payload\r\n})\r\n\r\nexport const getUsersFailure = payload => ({\r\n  type: GET_USERS_FAILURE,\r\n  ...payload\r\n})\r\n\r\nexport const fetchGetUsers = payload => {\r\n  return dispatch =>{\r\n    dispatch(getUsersRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/consulta_usuarios_registrados1.php', {\r\n      method: \"GET\",\r\n      body: payload,\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(getUsersSuccess(result)))\r\n    .catch(error => {\r\n      dispatch(getUsersFailure(error.message))\r\n    })\r\n  }\r\n}","import { createStore, applyMiddleware, compose  } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react'\r\n\r\nconst Input = ({label, type, field}) => {\r\n  return(\r\n    <label className=\"form-label\">\r\n      {label}\r\n      {type === 'textarea' ? \r\n        <textarea className=\"form-input\" {...field}></textarea>\r\n        : <input className=\"form-input\" type={type} {...field} />\r\n      }\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\n\r\nconst InputNumber = ({label, form, field, regularExp}) => {\r\n  const handleChangeInput = (evento) => {\r\n    const { name, value } = evento.target;\r\n    let regex = new RegExp(regularExp);\r\n\r\n    if (regex.test(value)) {\r\n      form.setFieldValue(name, value)\r\n    }\r\n  }\r\n\r\n  return(\r\n    <label className=\"form-label\">\r\n      {label}\r\n      <input className=\"form-input\" type='text' {...field} onChange={handleChangeInput}  />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default InputNumber","import React from 'react'\r\n\r\nconst InputFile = ({label, type, field}) => {\r\n  const [files, setFiles] = React.useState([{name: 'Seleccionar archivo'}])\r\n  \r\n  const handleChange = (event) => {\r\n    let inputFile = event.target.files\r\n    let arrayFiles = []\r\n\r\n    for(let i = 0; i < inputFile.length; i++){\r\n      arrayFiles.push({name: inputFile[i].name})\r\n    }\r\n    if(inputFile.length) setFiles(arrayFiles)\r\n  }\r\n  \r\n  return(\r\n    <div className=\"form-label\">\r\n      {label}\r\n      <div className=\"file-upload\">\r\n        <label>\r\n          <div className=\"form-input\">\r\n            {files.map((item, index) => (\r\n              <span key={index} id='info'>{item.name}</span>\r\n            ))}\r\n          </div>\r\n          <input id='input-file' type={type} {...field} onChange={handleChange} multiple />\r\n          <div className=\"btn background-green\">Cargar</div>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputFile","import React from 'react'\r\nimport DatePicker from 'react-date-picker'\r\n\r\nconst InputDate = ({label, form, field}) => {\r\n\r\n  React.useEffect(() => {\r\n    if(!field.value){\r\n      form.setFieldValue(field.name, new Date())\r\n    }\r\n  }, [])\r\n\r\n  const handelChange = (value) => {\r\n    form.setFieldValue(field.name, value)\r\n  }\r\n\r\n  return(\r\n    <label className=\"form-label\">\r\n      {label}\r\n      <DatePicker\r\n        className=\"form-input\"\r\n        {...field}\r\n        onChange={handelChange}\r\n      />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default InputDate","import React from 'react'\r\n\r\nimport Input from './Input'\r\nimport InputNumber from './InputNumber'\r\nimport InputFile from './InputFile'\r\nimport InputDate from './InputDate'\r\n\r\nconst InputType = ({\r\n  type,\r\n  options = [],\r\n  ...props\r\n}) => {\r\n  switch (type) {\r\n    case 'number':\r\n      return <InputNumber {...props} />\r\n    case 'file':\r\n      return <InputFile type={type} {...props} />\r\n    case 'date':\r\n      return <InputDate {...props} />\r\n    default:\r\n      return <Input type={type} {...props} />\r\n  }\r\n}\r\n\r\nexport default InputType","import React from 'react'\r\nimport { ErrorMessage } from 'formik'\r\n\r\nimport InputType from './InputType'\r\n\r\nexport const FormikInput = ({ sizes, styles, ...props }) => {\r\n  return (\r\n    <div style={{marginBottom: '30px'}}>\r\n      <InputType {...props} />\r\n      <ErrorMessage name={props.field.name}>\r\n        {(msg) => (\r\n          <span className=\"message\">{msg}</span>\r\n        )}\r\n      </ErrorMessage>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormikInput\r\n","export const entrepreneurDataConfig = [\r\n  { label: 'Nombre de la tienda o persona', type: 'text', name: 'nombre' },\r\n  { label: 'Descripción de la tienda o persona', type: 'textarea', name: 'descripcion' },\r\n  { label: 'Nombre de contacto', type: 'text', name: 'nombree' },\r\n  { label: 'DNI', type: 'number', name: 'dni', regularExp: '^[0-9]{0,8}$' },\r\n  { label: 'Correo', type: 'email', name: 'correo' },\r\n  { label: 'Fecha de Nacimiento', type: 'date', name: 'fechanac' },\r\n  { label: 'Celular de contacto', type: 'number', name: 'celular', regularExp: '^[0-9]{0,9}$' },\r\n  { label: 'URL Facebook', type: 'text', name: 'url' },\r\n]\r\n\r\nexport const accessDataConfig = [\r\n  { label: 'Usuario', type: 'text', name: 'username' },\r\n  { label: 'Contraseña', type: 'password', name: 'clave' },\r\n  { label: 'Confirmar contraseña', type: 'password', name: 'confirmPassword' },\r\n  { label: 'Agregar archivos', type: 'file', name: 'addFiles' },\r\n]\r\n\r\nexport const loginDataConfig = [\r\n  { label: 'Usuario', type: 'text', name: 'username' },\r\n  { label: 'Contraseña', type: 'password', name: 'clave' },\r\n]","export const validateRegistry = values => {\r\n  const errors = {}\r\n\r\n  if (!values.nombre) {\r\n    errors.nombre = 'Requerido';\r\n  }\r\n\r\n  if (!values.descripcion) {\r\n    errors.descripcion = 'Requerido';\r\n  }\r\n\r\n  if (!values.correo) {\r\n    errors.correo = 'Requerido';\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.correo)) {\r\n    errors.correo = 'Correo inválido'\r\n  }\r\n\r\n  if (!values.celular) {\r\n    errors.celular = 'Requerido';\r\n  }\r\n\r\n  if (!values.username) {\r\n    errors.username = 'Requerido';\r\n  }\r\n\r\n  if (!values.clave) {\r\n    errors.clave = 'Requerido';\r\n  }\r\n\r\n  if (!values.confirmPassword) {\r\n    errors.confirmPassword = 'Requerido'\r\n  } \r\n  \r\n  if (values.clave !== values.confirmPassword) {\r\n    errors.confirmPassword = 'Las contraseñas no coinciden'\r\n  }\r\n\r\n  if(!values.termns) {\r\n    errors.termns = 'Requerido'\r\n  }\r\n\r\n  return errors\r\n}\r\n\r\nexport const validateLogin = values => {\r\n  const errors = {}\r\n\r\n  if (!values.username) {\r\n    errors.username = 'Requerido';\r\n  }\r\n\r\n  if (!values.clave) {\r\n    errors.clave = 'Requerido';\r\n  }\r\n\r\n  return errors\r\n}","export const initialValuesRegistry = {\r\n  idusuario: '',\r\n  dni: '',\r\n  nombre: '',\r\n  descripcion: '',\r\n  nombree: '',\r\n  fechanac: '',\r\n  celular: '',\r\n  correo: '',\r\n  url: '',\r\n  username: '',\r\n  clave: '',\r\n  confirmPassword: '',\r\n  termns: false,\r\n  mov_usu: 'N',\r\n  wichButton: '',\r\n}\r\n\r\nexport const initialValuesLogin = {\r\n  username: '',\r\n  clave: ''\r\n}","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormikInput from '../Components/ForminkInput'\r\nimport { entrepreneurDataConfig, accessDataConfig } from '../config/ConfigForm'\r\nimport { fetchUserRegistry } from '../redux/actions/userActions'\r\nimport { fetchFileUpload } from '../redux/actions/fileActions'\r\nimport { validateRegistry } from '../config/validation'\r\nimport { initialValuesRegistry } from '../config/initialValues'\r\n\r\nconst Registry = ({fetchUserRegistry, fetchFileUpload, history}) => {\r\n  const submitForm = () => {\r\n    let formElement = document.getElementById(\"formElement\")\r\n    let formData = new FormData(formElement)\r\n    let formDataFile = new FormData();\r\n    let fileField = document.querySelector(\"input[type='file']\");\r\n\r\n    formDataFile.append('file', fileField.files[0]);\r\n    fetchFileUpload(formDataFile)\r\n\r\n    formData.append('idusuario', '')\r\n    formData.append('mov_usu', 'N')\r\n    formData.delete('confirmPassword')\r\n    formData.delete('addFiles')\r\n    formData.delete('day')\r\n    formData.delete('month')\r\n    formData.delete('year')\r\n    fetchUserRegistry(formData).then(() => {\r\n      history.push('/login')\r\n    })\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">Registro</h2>\r\n        <h3 className=\"subtitle\">Ingresa los datos solicitados para formar parte de nuestros distribuidores.</h3>\r\n      </div>\r\n\r\n      <Formik initialValues={initialValuesRegistry} onSubmit={submitForm} validate={validateRegistry}>\r\n      {({resetForm, isValid, dirty}) => (\r\n        <Form className=\"form\" id=\"formElement\">\r\n          <h3 className=\"section-text\">Datos del Emprendedor</h3>\r\n          {entrepreneurDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                {...item}\r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          <h3 className=\"section-text\">Datos de acceso</h3>\r\n          {accessDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          <span className=\"form-label\">\r\n            <Field\r\n              type='checkbox'\r\n              name='termns'\r\n            />\r\n            Autorizo y Acepto que la Municipalidad de La Molina me notifique los actos administrativos que pudiera emitir a consecuencia de la presente solicitud y/0 procedimiento administrativo al correo electrónico.\r\n          </span>\r\n          \r\n          <div className=\"button-group\">\r\n            <button \r\n              className=\"btn background-red\" \r\n              type=\"button\" \r\n              onClick={() => resetForm(initialValuesRegistry)}>Cancelar</button>\r\n            <button \r\n              className=\"btn background-green\" \r\n              disabled={!dirty || !isValid}\r\n              type=\"submit\"\r\n            >\r\n              Enviar\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => state\r\n\r\nconst mapDispatchToProps = { fetchUserRegistry, fetchFileUpload }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Registry)","export const FILE_UPLOAD_REQUEST = 'FILE_UPLOAD_REQUEST'\r\nexport const FILE_UPLOAD_FAILURE = 'FILE_UPLOAD_FAILURE'\r\nexport const FILE_UPLOAD_SUCCESS = 'FILE_UPLOAD_SUCCESS'\r\n\r\nexport const fileUploadRequest = () => ({\r\n  type: FILE_UPLOAD_REQUEST\r\n})\r\n\r\nexport const fileUploadSuccess = payload => ({\r\n  type: FILE_UPLOAD_SUCCESS,\r\n  ...payload\r\n})\r\n\r\nexport const fileUploadFailure = payload => ({\r\n  type: FILE_UPLOAD_FAILURE,\r\n  ...payload\r\n})\r\n\r\nexport const fetchFileUpload = payload => {\r\n  return dispatch =>{\r\n    dispatch(fileUploadRequest())\r\n    return fetch('https://moliemprendedor.munimolina.gob.pe/Controlador/subirarchivos1.php', {\r\n      method: 'POST',\r\n      body: payload\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => dispatch(fileUploadSuccess(result)))\r\n    .catch(error => {\r\n      dispatch(fileUploadFailure(error.message))\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Formik, Form, Field } from 'formik'\r\nimport { connect } from 'react-redux'\r\n\r\nimport FormikInput from '../Components/ForminkInput'\r\nimport { loginDataConfig } from '../config/ConfigForm'\r\nimport { fetchUserLogin } from '../redux/actions/userActions'\r\nimport { validateLogin } from '../config/validation'\r\nimport { initialValuesLogin } from '../config/initialValues'\r\n\r\nconst Login = ({ fetchUserLogin, history }) => {\r\n  const submitForm = (values, actions) => {\r\n    let formElement = document.getElementById(\"formLogin\")\r\n    let formData = new FormData(formElement)\r\n      \r\n    fetchUserLogin(formData).then((data)=>{\r\n      if(data.response && data.response['0'] && data.response[0].COD_MENSAJE){\r\n        actions.setErrors({\r\n          general: data.response[0].COD_MENSAJE,\r\n        })\r\n      }\r\n      else{\r\n        history.push('/account')\r\n      }\r\n    })\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">Mi cuenta</h2>\r\n        <h3 className=\"subtitle\">Ingresa con tu cuenta para hacer uso de la Plataforma Digital MoliEmprendedor.</h3>\r\n      </div>\r\n\r\n      <Formik \r\n        initialValues={initialValuesLogin} \r\n        onSubmit={(values, actions) => {\r\n          submitForm(values, actions)\r\n        }}\r\n        validate={validateLogin}\r\n      >\r\n      {({ errors, isValid, isSubmitting, dirty }) => (\r\n        <Form className=\"form\" id=\"formLogin\">\r\n          {loginDataConfig.map((item, index) => {\r\n            return (\r\n              <Field \r\n                key={index} \r\n                type={item.type} \r\n                name={item.name} \r\n                label={item.label} \r\n                component={FormikInput} \r\n              />\r\n            )\r\n          })}\r\n\r\n          {errors.general && (\r\n            <p className=\"message\">{errors.general}</p>\r\n          )}\r\n\r\n          <div className=\"button-group\">\r\n            <button \r\n              className=\"btn background-green\" \r\n              disabled={!dirty || !isValid} \r\n              type=\"submit\"\r\n            >\r\n              Ingresar\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => state \r\n\r\nconst mapDispatchToProps = {fetchUserLogin }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","export const columns = [\r\n  {\r\n    Header: 'IDUSUARIO',\r\n    accessor: 'IDUSUARIO',\r\n  },\r\n  {\r\n    Header: 'NOMBRE',\r\n    accessor: 'NOMBRE',\r\n  },\r\n  {\r\n    Header: 'APELLIDO PATERNO',\r\n    accessor: 'PATERNO',\r\n  },\r\n  {\r\n    Header: 'APELLIDO MATERNO',\r\n    accessor: 'MATERNO',\r\n  },\r\n  {\r\n    Header: 'DNI',\r\n    accessor: 'DNI',\r\n  },\r\n  {\r\n    Header: 'FECHANAC',\r\n    accessor: 'FECHANAC',\r\n  },\r\n  {\r\n    Header: 'CORREO',\r\n    accessor: 'CORREO',\r\n  },\r\n  {\r\n    Header: 'CELULAR',\r\n    accessor: 'CELULAR',\r\n  },\r\n]","import React from 'react'\r\nimport { useTable } from 'react-table'\r\n\r\nconst DataTable = ({ columns, data }) => {\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row)\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\n\r\nexport default DataTable\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchGetUsers } from '../redux/actions/userActions'\r\nimport { columns } from '../config/tableConfig'\r\nimport DataTable from '../Components/DataTable'\r\n\r\nconst Login = ({ loginResponse, history, fetchGetUsers, listUsers }) => {\r\n  \r\n  React.useEffect(() => {\r\n    if(!loginResponse){\r\n      history.push('/login')\r\n    }\r\n    else{\r\n      fetchGetUsers()\r\n    }\r\n  }, [])\r\n  \r\n  return(\r\n    <div>\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">{loginResponse && loginResponse['0'].NOMBRE}</h2>\r\n      </div>\r\n\r\n      {listUsers && (\r\n        <DataTable\r\n          data={listUsers}\r\n          columns={columns}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loginResponse: state.user.loginResponse,\r\n  listUsers: state.user.listUsers,\r\n})\r\n\r\nconst mapDispatchToProps = { fetchGetUsers }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nimport './assets/styles.css'\nimport store from './redux/store'\nimport Registry from './Pages/Registry'\nimport Login from './Pages/Login'\nimport Account from './Pages/Account';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Registry} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/account\" component={Account} />\n        </Switch>\n      </HashRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}